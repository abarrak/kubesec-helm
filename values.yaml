## Supports:
# 1. `server` to run kubesec in standby http server.
# 2. `job` to run it on demand against supported resources in the cluster on specific namespace.
# 3. `cron` to run on perodic schedule.
# Defaults to `server` mode.
##
mode: server

# Applicable for background modes `job` or `cron` .
modeOptions:
  # Defaults to all if empty.
  targetNamespace: []
  # Defaults to once daily at 6 AM.
  schedule: "0 6 * * *"
  suspend: false

  # Forbid or allow simultaneous run for the jobs.
  concurrencyPolicy: Allow

  timeZone: ""
  backoffLimit: 3
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 5
  startingDeadlineSeconds: ""

  # Time to keep pods afer the job successful run.
  # Useful for reference and logs.
  ttlSecondsAfterFinished: "518400"

  restartPolicy: OnFailure

  kubesecCommand: kubesec --help

replicaCount: 1

image:
  repository: kubesec/kubesec
  pullPolicy: IfNotPresent
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
